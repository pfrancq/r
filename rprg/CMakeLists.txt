PROJECT(rprg)

INCLUDE_DIRECTORIES(.)
INCLUDE_DIRECTORIES(../rcore/io)
INCLUDE_DIRECTORIES(../rcore/tools)
INCLUDE_DIRECTORIES(../rcore/strings)
IF(WIN32 AND NOT MINGW)
    INCLUDE_DIRECTORIES(../rcore/win32support)
ENDIF(WIN32 AND NOT MINGW)
INCLUDE_DIRECTORIES(../rcore/frontend/qt)

ADD_SOURCE_FILE(rprg core RPRG_INCLUDES)
ADD_SOURCE_FILE(rprg frontend ROPTIMIZATION_INCLUDES)

INCLUDE_DIRECTORIES(${RPRG_INCLUDES})

IF(WIN32)
    ADD_LIBRARY(rprg STATIC ${rprg_TARGET_SOURCES})
    ADD_FRONTEND(rprg STATIC 2 2 2.0.0 lib r RPRG_INCLUDES)
    SET_TARGET_PROPERTIES(rprg PROPERTIES LINK_FLAGS "/NODEFAULTLIB:MSVCRTD;MSVCRT;LIBCMT;LIBCMTD")
    TARGET_LINK_LIBRARIES(rprg rcore ws2_32.lib msvcrtd.lib)
    INSTALL(TARGETS rprg ARCHIVE DESTINATION lib)
ELSE(WIN32)
    ADD_LIBRARY(rprg SHARED ${rprg_TARGET_SOURCES})
    ADD_FRONTEND(rprg SHARED 2 2 2.0.0 lib r RPRG_INCLUDES)
    TARGET_LINK_LIBRARIES(rprg rcore)
    CREATE_LIBTOOL_FILE(rprg /lib)
    INSTALL(TARGETS rprg LIBRARY DESTINATION lib)
ENDIF(WIN32)

SET_TARGET_PROPERTIES(rprg PROPERTIES LT_VERSION_CURRENT 2
                                       VERSION 2.0.0
                                       SOVERSION 2)


IF(rcmake-verbose)
    PRINT_LIST_WITH_MESSAGE("Will install the following header files for rprg:" rprg_INST_INCLUDES)
ENDIF(rcmake-verbose)

INSTALL(FILES ${rprg_INST_INCLUDES} DESTINATION include/r)




