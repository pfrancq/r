#MIN_CONFIG(3.0.0)

#------------------------------------------------------------------------------#
#                                                                              #
#          This script was written by Valery VANDAELE vavdaele@ulb.ac.be       #
#                                                                              #
#------------------------------------------------------------------------------#


AM_INIT_AUTOMAKE(r, 1.86)
AC_PROG_CXX

AC_C_BIGENDIAN

AC_SUBST(INCLUDES_R,'-I$(top_builddir)/rcore/std -I$(top_builddir)/rcore/tools -I$(top_builddir)/rcore/db -I$(top_builddir)/rcore/prg -I$(top_builddir)/rmath/graph -I$(top_builddir)/rmath/matrix -I$(top_builddir)/rmath/geometry -I$(top_builddir)/roptimization/promethee -I$(top_builddir)/roptimization/ga -I$(top_builddir)/roptimization/gga -I$(top_builddir)/roptimization/ga2d -I$(top_builddir)/rcore/frontend/kde')

FRONTEND=""
FRONTEND_LIB=""


#--------------------- CURL -----------------------------
# ---- INCLUDES and LIBS for CURL ----

AC_PATH_PROG(CURL_CONFIG,curl-config)
if [ test -n "$CURL_CONFIG" ]; then
	CURL_INCLUDES=`$CURL_CONFIG --cflags`
	CURL_PREFIX=`$CURL_CONFIG --prefix`
	if test "${CURL_PREFIX}/lib" != "/usr/lib" ; then
		CURL_LIBS="-L${CURL_PREFIX}/lib"
	fi
else         
	CURL_INCLUDES=""
	CURL_LIBS=""
fi

# ---- add configure option : --with-curlincludedir=DIR ----
AC_ARG_WITH(curlincludedir,
	[  --with-curlincludedir=DIR use CURL includes from DIR],
	[CURL_INCLUDES="-I$withval"])
CXXFLAGS="$CURL_INCLUDES $CXXFLAGS"

# ---- add configure option : --with-curllibdir=DIR -----
AC_ARG_WITH(curllibdir,
	[  --with-curllibdir=DIR   use CURL libraries from DIR],
	[CURL_LIBS="-L$withval"])
LDFLAGS="$CURL_LIBS $LDFLAGS"

# ---- check if the include file and if the library are present ----
AC_CHECK_HEADER(curl/curl.h,
	[AC_CHECK_LIB(curl,main,
		[CURL_LIBS="$CURL_LIBS -lcurl"
		AC_DEFINE_UNQUOTED(HAVE_LIBCURL,1,
			[Define if you have the CURL library])],
		[AC_MSG_ERROR(curl library is not available)
		CURL_INCLUDES="" CURL_LIBS=""])],
	[AC_MSG_ERROR(curl library headers are not available - no curl.h)])

AC_SUBST(CURL_INCLUDES)
AC_SUBST(CURL_LIBS)
#--------------------- END CURL -----------------------------


# add argument : --with-mysql
# ----------------------------
AC_ARG_WITH(mysql,
	AC_HELP_STRING(
		[--with-mysql],
		[MySQL include directory [[/usr/include/mysql]]]),
	[MYSQL_DIR=$withval],
	[MYSQL_DIR="/usr"])



# ----- check for libmysqlclient.la on the system ------
AC_DEFUN(MYSQL_LIB_CHK,[
	str="$1/libmysqlclient.*"
	for j in `echo $str`; do
		if test -r $j; then
		MYSQL_LIB_DIR=$1
		break 2
	fi
	done
])

# Determine MySQL installation paths /usr/include /usr/include/mysql
for i in $MYSQL_DIR  /usr/include /usr/include/mysql /usr/local /usr/local/mysql; do
   test -f $i/mysql.h                    && MYSQL_INC_DIR=$i/
   test -f $i/mysql/mysql.h              && MYSQL_INC_DIR=$i/mysql
   test -f $i/include/mysql/mysql.h              && MYSQL_INC_DIR=$i/include/mysql
done

if test -z "$MYSQL_INC_DIR"; then
  if test "x$MYSQL_DIR" != "x"; then
    AC_MSG_ERROR(Cannot find clientMySQL header files under $MYSQL_DIR)
  else
    AC_MSG_ERROR(Cannot find clientMySQL headers.  Use --with-mysql= to specify non-default path.)
  fi
fi

for i in $MYSQL_DIR  /usr/local /usr/local/mysql; do
   MYSQL_LIB_CHK($i/lib)
   MYSQL_LIB_CHK($i/lib/mysql)
done

LDFLAGS="-L$MYSQL_LIB_DIR $LDFLAGS"
CXXFLAGS="-I$MYSQL_INC_DIR $CXXFLAGS"

AC_CHECK_LIB(mysqlclient, mysql_init, LIBS="-lmysqlclient $LIBS",
	AC_MSG_ERROR([clientMySQL libraries not found.]))
AC_CHECK_LIB(mysqlclient, mysql_thread_init, [],
	AC_DEFINE(OLD_MYSQL, 1, [Old MySQL version]))

# ----- end of check for libmysqlclient.la on the system ------

#--------------------- CHECK THE USE OF KDE FRONTEND ---------

AC_ARG_ENABLE(kde, [  --enable-kde            enable kde frontend for plugins [[default=no]]],,enable_kde=no)


if test "$enable_kde" != "no"; then
	dnl check for qt libs
	echo "compile frontend... KDE"
	KDE_SET_PREFIX
	KDE_PROG_LIBTOOL
	AM_KDE_WITH_NLS
	KDE_USE_QT
	AC_PATH_KDE
	AC_CHECK_KDEMAXPATHLEN
	FRONTEND="kde"
	CXXFLAGS="$CXXFLAGS -D_USE_KDE"
fi

AC_SUBST(FRONTEND)
AC_SUBST(FRONTEND_LIB)


#--------------------- END CHECK THE USE OF KDE FRONTEND ---------

CXXFLAGS="$CXXFLAGS $USE_EXCEPTIONS"
